//
//  MessagesViewController.swift
//  MessagesExtension
//
//  Created by Nate Parrott on 11/1/16.
//  Copyright Â© 2016 Nate Parrott. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.addSubview(browser)
        view.addConstraints([
            view.leftAnchor.constraint(equalTo: browser.leftAnchor),
            view.rightAnchor.constraint(equalTo: browser.rightAnchor),
            view.topAnchor.constraint(equalTo: browser.topAnchor),
            view.bottomAnchor.constraint(equalTo: browser.bottomAnchor)
            ])
        browser.translatesAutoresizingMaskIntoConstraints = false
        _update()
    }
    
    let browser = StickerBrowser()
    
    func _update() {
        let strings: [(String, String)] = [
            ("read", "Read X1"),
            ("ignored", "Ignored X1"),
            ("blocked", "Blocked X1"),
            ("read_cried", "Read and cried X1"),
            ("deleted", "Deleted X1"),
            ("regretted", "Regretted reading X1"),
            ("screenshotted", "Screenshotted X1"),
            ("read_forgot", "Read X1, forgotten X2")
        ]
        browser.receipts = strings.map({ ReadReceipt(text: $0.1, time: Date(), id: $0.1) })
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
        _update()
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

}
